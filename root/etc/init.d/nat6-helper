#!/bin/sh /etc/rc.common
# NAT6 init script for OpenWrt // Depends on package: kmod-ipt-nat6

START=55
STOP=10

EXTRA_COMMANDS="set_lan start_nat6 stop_nat6 reset_lan ipv6_daemon"
EXTRA_HELP="set_lan:Setting ULA, IPv6-DNS and DHCPv6
            start_nat6:starting nat6 stop_nat6:Stoping nat6
            reset_lan:Resetting ULA, IPv6-DNS and DHCPv6
            ipv6_daemon:ipv6-Daemon"

enable=$(uci get nat6-helper.@nat6-helper[0].enabled)                               #插件是否启用
WAN6_NAME=$(uci get nat6-helper.@nat6-helper[0].name)                               #选定的IPv6上行接口，默认为wan6

#一键设置函数
set_lan() 
{
    #插件未开启则退出
    [ $enable = "0" ] && { logger -t nat6-helper "Please enable the nat6-helper plugin before one-key configuration."; exit 0; }
    
    #配置ULA IPv6-DNS DHCPv6
    ULA_PREFIX=$(uci get network.globals.ula_prefix)                                #IPv6 ULA
    if [ $(echo "$ULA_PREFIX" | grep -c -E "^(dc[0-9a-fA-F]{2}|dd[0-9a-fA-F]{2}|fc[0-9a-fA-F]{2}|fd[0-9a-fA-F]{2}):([0-9a-fA-F]{0,4}):") -ne 1 ] ; then
        uci set network.globals.ula_prefix='fd00:6666:6666::/64'                    #不符合要求重设LUA为fd00:6666:6666::/64，可自行修改
    fi
    uci set network.$WAN6_NAME.dns='2001:4860:4860::8888 240c::6666 2400:3200::1'   #设置IPv6接口的DNS，分别为谷歌、中国下一代互联网北京研究中心、阿里的DNS
    uci set network.$WAN6_NAME.peerdns='0'                                          #禁用IPv6接口的DNS服务器自动配置，即禁用使用广域网ISP提供的DNS服务器
    uci set network.$WAN6_NAME.reqaddress='try'                                     #为IPv6接口配置IPv6地址，优先使用DHCPv6分配的IPv6地址，如果DHCPv6分配失败，则自动分配IPv6地址
    uci set network.$WAN6_NAME.reqprefix='auto'                                     #为IPv6接口配置IPv6前缀，优先使用DHCPv6分配的IPv6前缀，如果DHCPv6分配失败，则自动分配IPv6前缀

    #配置LAN接口的DHCPv6
    uci set dhcp.lan.ra='server'                                                    #将lan接口上的路由通告服务设置为服务器模式
    uci set dhcp.lan.dhcpv6='server'                                                #将lan接口上的DHCPv6服务设置为服务器模式
    uci delete dhcp.lan.ndp                                                         #停用NDP代理
    uci set dhcp.lan.ra_management='1'                                              #有状态+无状态 0-SLAAC 1-SLAAC和DHCPv6 2-DHCPv6
    uci set dhcp.lan.ra_default='1'                                                 #总是通告默认路由，关键 0-存在默认路由且具有全局IPv6地址 1-存在默认路由但没有全局IPv6地址 2-两者均不满足
 
    #配置LAN接口的IPv6分配长度
    ULA_PREFIX=$(uci get network.globals.ula_prefix)                                #局域网LUA，LUA可能会被33行更新，故在此处重新获得
    PREFIX_LEN=$(echo $ULA_PREFIX | awk -F/ '{print $2}')                           #提取设定的ULA的前缀长度，LUA可能会被33行更新，故在此处获得
    uci set network.lan.ip6assign="$PREFIX_LEN"                                     #设置LAN接口的IPv6分配长度，默认ULA时应为64

    #LAN接口强制DHCP
    uci set dhcp.lan.force='1'                                                      #即使检测到另一台服务器,也要强制使用此网络上的DHCP

    #取消禁止解析IPv6 DNS记录
    uci delete dhcp.@dnsmasq[0].filter_aaaa                                         #删除dnsmasq DHCPv6服务器的AAAA记录过滤器

    #要求openwrt中打开防火墙，基本设置和区域中，打开转发。但是，基本设置其实
    #是default，实测不改动也是可以的；并且安全起见最好不要改变“WAN”区域中转发的配置。
    #uci set firewall.@defaults[0].forward='ACCEPT'                                  #基本设置中设置允许转发，即没有指定防火墙区域等情况时，默认允许转发
    #uci set firewall.@zone[1].forward='ACCEPT'                                      #“WAN”区域设置允许转发，@zone[0]对应“LAN”区域、@zone[1]对应“WAN”区域（默认情况）

    #写入到系统配置
    echo "net.ipv6.conf.default.forwarding=2" >> /etc/sysctl.conf
    echo "net.ipv6.conf.all.forwarding=2" >> /etc/sysctl.conf
    echo "net.ipv6.conf.default.accept_ra=2" >> /etc/sysctl.conf
    echo "net.ipv6.conf.all.accept_ra=2" >> /etc/sysctl.conf

    #重启网络和DHCP，输出日志
    uci commit network
    uci commit dhcp
    /etc/init.d/dnsmasq restart
    /etc/init.d/network restart
    logger -t nat6-helper "ULA, IPv6-DNS and DHCPv6 have been set"
}

start_nat6()
{
    #插件未开启则退出
    [ $enable = "0" ] && exit 0

    #获取选中的ipv6接口的物理接口
    interface=$(uci get "network.$WAN6_NAME.device" || uci get "network.$WAN6_NAME.ifname")

    #检测IPv6接口对应的物理接口是否存在，如果物理接口不存在，则会写入错误日志并退出脚本
    if [ -z "$interface" ] || [ ! -e "/sys/class/net/$interface/" ] ; then
        logger -t nat6-helper "Fatal error: Lookup of $interface interface failed. Were the default interface names changed?" && exit 1
    fi

    #测试指定的IPv6接口是否已经获得带网关的默认IPv6路由，这条路由为ISP-DHCPv6客户端自动配置，存在该路由说明路由器自身已经获得IPv6访问权
    logger -t NAT6 "Probing IPv6 route"
    PROBE=0
    COUNT=0
    MAX_TRIES=15
    while [ $PROBE -eq 0 ]
    do
        if [ $COUNT -gt $MAX_TRIES ]
        then
            logger -t nat6-helper "Fatal error: No default IPv6 route found (reached retry limit)" && exit 1                            #多次尝试后无法获得带网关的默认IPv6路由，失败退出
        fi
        COUNT=$((COUNT+1))
        sleep $COUNT
        PROBE=$(ip -6 route | grep -i '^default.*via' | grep -i -F "dev $interface" | grep -i -o 'via.*' | wc -l)                       #探测是否具有带网关的默认IPv6路由
    done

    #开始设置nat6
    logger -t nat6-helper "Start configuring nat6"

    #gateway=$(ip -6 route | grep "default from 2" | awk '{print $5}')                                                                  #获取当前状态默认IPv6网关
    gateway=$(ip -6 route | grep -i '^default.*via' | grep -i -F "dev $interface" | grep -i -o 'via.*' | cut -d ' ' -f 2 | head -n 1)   #获取网关的更好的写法，对应接口

    #检测IPv6上行接口默认路由网关是否存在，如果默认路由网关不存在，则会写入错误日志并退出脚本
    if [ -z "$gateway" ] ; then
            logger -t nat6-helper "Fatal error: No IPv6 gateway for $interface found" && exit 1
    fi

    #检测当前ULA是否符合RFC4193定义的ULA前缀范围fc00::/7(增加dc00::/7)
    ULA_PREFIX=$(uci get network.globals.ula_prefix)                                                                                    #IPv6 ULA
    if [ $(echo "$ULA_PREFIX" | grep -c -E "^(dc[0-9a-fA-F]{2}|dd[0-9a-fA-F]{2}|fc[0-9a-fA-F]{2}|fd[0-9a-fA-F]{2}):([0-9a-fA-F]{0,4}):") -ne 1 ] ; then
        logger -t nat6-helper "Fatal error: IPv6 ULA prefix $ULA_PREFIX seems invalid. Please verify that a prefix is set and valid." && exit 1
    fi

    #设置nat6并添加标识 ##Add IPv6 NAT rule to /etc/firewall.user
    ip6tables -t nat -I POSTROUTING -s $ULA_PREFIX -o $interface -m comment --comment "v6NAT" -j MASQUERADE > /dev/null 2>&1        #-A最后 -I最前，优先匹配
    if ! grep -q "ip6tables -t nat -I POSTROUTING -o $interface -m comment --comment \"v6NAT\" -j MASQUERADE" /etc/firewall.user; then
        echo "ip6tables -t nat -I POSTROUTING -o $interface -m comment --comment \"v6NAT\" -j MASQUERADE" >> /etc/firewall.user
    fi

    #检查上一条命令执行的结果，如果返回值为0，则说明命令执行成功，输出一条日志记录添加IPv6 masquerading规则到
    #防火墙的情况，否则执行失败，输出一条日志记录添加IPv6 masquerading规则失败的情况，并且终止脚本的执行。
    if [ $? -eq 0 ] ; then
        logger -t nat6-helper "Added IPv6 masquerading rule to the firewall (Src: $ULA_PREFIX - Dst: $interface)"
    else
        logger -t nat6-helper "Fatal error: Failed to add IPv6 masquerading rule to the firewall (Src: $ULA_PREFIX - Dst: $interface)" && exit 1
    fi

    #设置目的地为IPv6公网的流量的网关
    ip -6 route add "2000::/3" via $gateway dev $interface > /dev/null 2>&1

    #检查上一条命令执行的结果，如果返回值为0，则说明添加路由成功，输出一条日志；如果失败，则输出另一条日志，并且终止脚本的执行。
    if [ $? -eq 0 ] ; then
        logger -t nat6-helper "Added $gateway to routing table as gateway on $interface for outgoing connections"
    else
        logger -t nat6-helper "Error: Failed to add $gateway to routing table as gateway on $interface for outgoing connections"
    fi

    #设置上行接口的IPv6的无状态地址（接收RA、启用临时IPv6地址），以使用临时IPv6地址来发送出站连接
    PRIVACY=1
    if [ $PRIVACY -eq 1 ] ; then
        echo 2 > "/proc/sys/net/ipv6/conf/$interface/accept_ra"   #IPv上行接口接受路由通告，以便路由器获得上级IPv6网络前缀，生成无状态IPv6地址
        if [ $? -eq 0 ] ; then
            logger -t nat6-helper "Accepting router advertisements on $interface even if forwarding is enabled (required for temporary addresses)"
        else
            logger -t nat6-helper "Error: Failed to change router advertisements accept policy on $interface (required for temporary addresses)"
        fi
        echo 2 > "/proc/sys/net/ipv6/conf/$interface/use_tempaddr"
        if [ $? -eq 0 ] ; then
            logger -t nat6-helper "Using temporary addresses for outgoing connections on interface $interface"
        else
            logger -t nat6-helper "Error: Failed to enable temporary addresses for outgoing connections on interface $interface"
        fi
    fi

    #向系统日志输出设置成功信息
    if (ip -6 route | grep -q "2000::/3") && (ip6tables-save -t nat | grep -q "v6NAT");then
        logger -t nat6-helper "Routing rule and firewall NAT6 rule have been set"
    fi
}

stop_nat6()
{
    #网络变动后IPv6网关可能会变，以及用户有可能重新选择ipv6网口，所
    #以需要先获取之前脚本设置的ipv6网关，组合出删除旧的路由的命令
    last_if=$(ip6tables-save -t nat | grep "v6NAT" | awk '{print $4}' | head -n 1)            #获取之前设置的出口网口
    last_gw=$(ip -6 route | grep "2000::/3" | awk '{print $3}')                               #之前由脚本设置的IPv6路由的网关地址

    #删除之前在路由表为目的地为IPv6公网的流量设置的路由规则。接口关闭或者清除配置时调用，故不需要校验插件是否启用。
    ip -6 route del "2000::/3" via $last_gw dev $last_if  > /dev/null 2>&1
    
    #删除nat6设置
    while ip6tables -t nat -C POSTROUTING -o $last_if -m comment --comment v6NAT -j MASQUERADE >/dev/null 2>&1; do
        ip6tables -t nat -D POSTROUTING -o $last_if -m comment --comment v6NAT -j MASQUERADE >/dev/null 2>&1
    done
    sed -i "/ip6tables -t nat -I POSTROUTING -o $last_if -m comment --comment \"v6NAT\" -j MASQUERADE/d" /etc/firewall.user > /dev/null 2>&1   #删除/etc/firewall.user中路由规则


    #向系统日志输出清除设置成功信息
    if !(ip -6 route | grep -q "2000::/3") && !(ip6tables-save -t nat | grep -q "v6NAT");then
        logger -t nat6-helper "Routing rule and firewall NAT6 rule have been delete"
    fi
}

reset_lan()
{
    #插件未关闭则退出
    [ $enable = "1" ] && { logger -t nat6-helper "Please disable the nat6-helper plugin before one-key configuration."; exit 0; }
    
    stop_nat6

    #重设DHCPv6和IPv6-DNS，LUA为初始的或者d00:6666:6666::/64，不需要恢复
    uci set network.$WAN6_NAME.dns=''                                               #清空DNS
    uci set network.$WAN6_NAME.peerdns='1'                                          #DNS服务器自动配置
    uci set network.$WAN6_NAME.reqaddress='try'
    uci set network.$WAN6_NAME.reqprefix='auto'

    #重设LAN接口的DHCPv6
    uci set dhcp.lan.ra='server'                                                    #将lan接口上的路由通告服务设置为混和模式
    uci set dhcp.lan.dhcpv6='server'                                                #将lan接口上的DHCPv6服务设置为混合模式
    uci delete dhcp.lan.ndp                                                         #启用用NDP代理
    uci set dhcp.lan.ra_management='1'                                              #有状态+无状态 0-SLAAC 1-SLAAC和DHCPv6 2-DHCPv6
    uci set dhcp.lan.ra_default='0'                                                 #取消总是通告默认路由 0-存在默认路由且具有全局IPv6地址 1-存在默认路由但没有全局IPv6地址 2-两者均不满足
 
    #配置LAN接口的IPv6分配长度
    uci set network.lan.ip6assign="60"                                              #设置LAN接口的IPv6分配长度，此时重设为64

    #LAN接口强制DHCP
    uci set dhcp.lan.force='0'                                                      #取消强制DHCP

    #取消禁止解析IPv6 DNS记录，不建议取消

    #删除写入到系统配置的配置
    sed -i '/net.ipv6.conf.default.forwarding=2/d' /etc/sysctl.conf
    sed -i '/net.ipv6.conf.all.forwarding=2/d' /etc/sysctl.conf
    sed -i '/net.ipv6.conf.default.accept_ra=2/d' /etc/sysctl.conf
    sed -i '/net.ipv6.conf.all.accept_ra=2/d' /etc/sysctl.conf

    #重启网络和DHCP，输出日志
    uci commit network
    uci commit dhcp
    /etc/init.d/dnsmasq restart
    /etc/init.d/network restart
    logger -t nat6-helper "IPv6-DNS and DHCPv6 have been set"
}

ipv6_daemon()
{
    daemon_enabled=$(uci get nat6-helper.@daemon_ipv6[0].daemon_enabled)                       #ipv6守护是否启用
    daemon_running=$(uci get nat6-helper.@daemon_ipv6[0].daemon_running)                       #ipv6守护运行状态

    #守护未开启则退出
    [ $daemon_enabled = "0" ] && exit 0

    # 已有运行则退出
    [ $daemon_running = "1"] && exit 0
    
    # 设置为正在运行,相当于加锁
    uci set nat6-helper.@daemon_ipv6[0].daemon_running=1
    uci commit nat6-helper

    logger -t nat6-helper "The daemon process for IPv6 connectivity on interface $interface has started"

    while true; do
        
        #获取最新状态
        daemon_enabled=$(uci get nat6-helper.@daemon_ipv6[0].daemon_enabled)                          #ipv6守护是否启用
        ping_period=$(uci get nat6-helper.@daemon_ipv6[0].ping_period)                                #ping周期

        # 判断守护是否启用
        if [ "$daemon_enabled" = "1" ]; then

            #用于ping的参数均需获取实时最新值，以便获取修改
            WAN6_NAME=$(uci get nat6-helper.@nat6-helper[0].name)                                     #选定的IPv6上行接口
            interface=$(uci get "network.$WAN6_NAME.device" || uci get "network.$WAN6_NAME.ifname")   #获取选中的ipv6接口的物理接口
            ping_host=$(uci get nat6-helper.@daemon_ipv6[0].ping_host)                                #ping主机

            #ping检测
            ping6 -c 3 -I "$interface" "$ping_host" >/dev/null 2>&1
            if [ $? -eq 0 ]; then
                logger -t nat6-helper "The IPv6 network connectivity on interface $interface is normal"
            else
                logger -t nat6-helper "The IPv6 network connectivity on interface $interface is abnormal, and the interface is being restarted"
                ifdown $WAN6_NAME && ifup $WAN6_NAME >/dev/null 2>&1
            fi
        else
            # 设置为结束运行,相当于解锁
            uci set nat6-helper.@daemon_ipv6[0].daemon_running=0
            uci commit nat6-helper
            logger -t nat6-helper "The daemon process for IPv6 connectivity on interface $interface has ended"
            exit 0
        fi

        #睡眠ping_period
        while true; do

            #查看daemon_running是否被关闭按钮强制设置为0，为0相当于锁被没收，退出守护
            daemon_running=$(uci get nat6-helper.@daemon_ipv6[0].daemon_running)
            if [ $daemon_running = "0" ]; then
                logger -t nat6-helper "The daemon process for IPv6 connectivity on interface $interface has ended"
                exit 0
            fi

            sleep 1

            # 减少等待时间
            ping_period=$((ping_period - 1))

            # 如果等待时间用完了，则退出睡眠循环
            [ $ping_period = "0" ] && break
        done
    done
}

boot()
{
    #开机检测是否开启守护
    uci set nat6-helper.@daemon_ipv6[0].daemon_running=0
    ipv6_daemon
}
